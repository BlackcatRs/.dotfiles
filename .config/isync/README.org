* Isync
Install ~isync~ using your package manager, here we are installing the =apt= package manager, but use whatever package manager you are using:
#+begin_src shell :tangle no 
  sudo apt update && sudo apt install isync
#+end_src

We will use ~isync~ program to download mails to local Maildir folder. We can also use a program called ~offlineimap~ which is a bit slower but it can work on Windows. 

*NOTE: isync is the name of the project, mbsync is the name of the executable.*

** Isync Configuration
Download mails from remote Maildir folder using =.mbsyncrc= configuration file with following settings. 
First at all we configure the remote location of mails from where to download mails.

*** Remote Maildir
Arbitrary name to remote mail server:
#+begin_src org :tangle ./mbsyncrc :padline no
IMAPAccount laposte
#+end_src

Imap server to ownload mails from:
#+begin_src org :tangle ./mbsyncrc :padline no
Host imap.laposte.net 
#+end_src

ID or mail address to connect to IMAP server: 
#+begin_src org :tangle ./mbsyncrc :padline no
User vithurshan@laposte.net
#+end_src

Do not use clear text password =Pass yourPassword=. To store the password in an encrypted file use =PassCmd "gpg -q --for-your-eyes-only --no-tty -d ~/.mailpass.gpg"=. Or use password manager Pass using:
#+begin_src org :tangle ./mbsyncrc :padline no
PassCmd "pass mail/laposte | head -n 1"
#+end_src

Use SSL with IMAP protocol:
#+begin_src org :tangle ./mbsyncrc :padline no
SSLType IMAPS
#+end_src

The following line should work. If you get certificate errors, uncomment the two following lines and read the "Troubleshooting" section at https://wiki.archlinux.org/title/isync#Troubleshooting:
#+begin_src org :tangle ./mbsyncrc :padline no
CertificateFile /etc/ssl/certs/ca-certificates.crt
#CertificateFile ~/.cert/imap.gmail.com.pem
#CertificateFile ~/.cert/Equifax_Secure_CA.pem
#+end_src

*** Remote Maildir as IMAPStore
Here we assign the remote maildir as IMAPStore:
#+begin_src org :tangle ./mbsyncrc
IMAPStore laposte-remote
Account laposte
#+end_src

*** Local Maildir
Let's now configure local maildir location for storing mails locally by setting  a arbitrary name for the section:
#+begin_src org :tangle ./mbsyncrc
MaildirStore laposte-local
#+end_src

This replicates the hierarchy of subfolders on remote server to local maildir if there are any under the inbox:
#+begin_src org :tangle ./mbsyncrc :padline no
SubFolders Verbatim
#+end_src

The path to store downloaded mail. The trailing "/" is important:
#+begin_src org :tangle ./mbsyncrc :padline no
Path ~/.local/share/mail/vithurshan@laposte.net/
Inbox ~/.local/share/mail/vithurshan@laposte.net/Inbox

#+end_src

*** Mails Sync Config
Associate mailboxes that we created earlier, local and remote, namely =laposte-remote= and =laposte-local:=
#+begin_src org :tangle ./mbsyncrc
Channel laposte
Far :laposte-remote:
Near :laposte-local:
#+end_src

The following configuration tells what and how to sync the local maildir with remote one.

We can exclude everything under [Gmail] folder, except the interesting folders:
#+begin_src :tangle no :padline no
Patterns * ![Gmail]* "[Gmail]/Sent Mail" "[Gmail]/Starred" "[Gmail]/All Mail"
#+end_src

Or include everything:
#+begin_src org :tangle ./mbsyncrc :padline no
Patterns *
#+end_src

Automatically create missing mailboxes, both locally and on the server. For ex: if we create a folder in the remote or local maildir, the next time =mbsync= run it won't create the folder:
#+begin_src org :tangle ./mbsyncrc :padline no
Create Both
#+end_src

Sync the movement of messages between folders and deletions, add after making sure the sync works:
#+begin_src org :tangle ./mbsyncrc :padline no
Expunge Both
#+end_src

Save the synchronization state files in the relevant directory (in local mailbox folder). For example if we move all of downloaded mails another location on the disk and the next time we run mbsync, it will read default sync state file and assume that we delete all mails and make that change to remote repo.
#+begin_src org :tangle ./mbsyncrc :padline no
SyncState *
#+end_src

** Start synchronization
Once we put all the configuration in =mbsyncrc=, we are ready to download the mail to the local maildir:
#+begin_src shell
  mbsync -c ~/.dotfiles/.config/isync/mbsyncrc -a
#+end_src

* TODO move to Readme.org
# * ONGOING Mail
# :LOGBOOK:
# - State "ONGOING"    from "ONGOING"    [2023-08-10 jeu. 10:49] \\
#   - Finished watching the above video
#   - Process HTML in the message content
# - State "ONGOING"    from "HOLD"       [2023-04-30 dim. 15:01] \\
#   Following https://www.youtube.com/watch?v=yZRyEhi4y44&list=PLEoMzSkcN8oM-kA19xOQc8s0gr0PpFGJQ video. Stop at 30:59
# :END:

# We can use Emacs to consult mails with the help of various programs. Among them, =Mu4e= is a mail client for Emacs and it is considered as an Emacs interface for =mu= the mail indexer. A typical example might be a mail sync program like ~isync~ which downloads mail from the remote Maildir folder to the local Maildir folder and then the =mu= indexer will be used to index the mail. Finally an Emacs mail client can read the mails.

# ** Prerequisite
# Install ~isync~ using your package manager, and you should install ~mu4e~ using the system package manager to avoid any compatibility issues. Here we are installing the =apt= package manager, but use whatever package manager you are using:
# #+begin_src shell :tangle no 
# sudo apt update && sudo apt install mu4e isync
# #+end_src

# ** Syncing Mails
# We will use ~isync~ program to download mails to local Maildir folder. We can also use a program called ~offlineimap~ which is a bit slower but it can work on Windows. Download mails from remote Maildir folder using =.mbsyncrc= configuration file with following settings:

# *NOTE: isync is the name of the project, mbsync is the name of the executable.*
# #+begin_src :results none :tangle no
# IMAPAccount gmail
# Host imap.gmail.com
# User systemcrafters.test@gmail.com
# PassCmd "cat ~/.oh-no-insecure-password"
# SSLType IMAPS
# CertificateFile /etc/ssl/certs/ca-certificates.crt

# IMAPStore gmail-remote
# Account gmail

# MaildirStore gmail-local
# Subfolders Verbatim
# Path ~/Mail/
# Inbox ~/Mail/Inbox

# Channel gmail
# Master :gmail-remote:
# Slave :gmail-local:
# Patterns * ![Gmail]* "[Gmail]/Messages envoy&AOk-s" "[Gmail]/Suivis" "[Gmail]/Tous les messages" "[Gmail]/Corbeille" "[Gmail]/Brouillons"
# Create Both
# SyncState *
# #+end_src
# *NOTE: Be careful of how you manage whitespace between lines in this file, the spaces define groupings!*

# Some older accounts name =Bin= as Trash, and if the names of the remote folders are not mentioned correctly in the configuration file, then it will causes an error. Or if your Gmail is set up with a different lanugage, then you need to translate the names of these folders. For Norwegian =[Gmail]/Corbeille= would be =[Gmail]/Papirkurv=. Check the names of remote folders of ~gmail~ account:
# #+begin_src shell
#   mbsync -c ~/.emacs.d/mu4e/.mbsyncrc -Dmn acc1-gmail
# #+end_src

# The value of =SSLVersions= is depends on the output of:
# #+begin_src shell
#   gpg2 -c .mbsyncpass-acc1
# #+end_src


# Settings you may need to change:
#     - =PassCmd= - We’re getting the contents of a plain text file here, you might want to use *gpg!*
#     - =Pass= - If you want to use plaintext password (not recommended!), doesn’t need quotation marks
#     - =CertificateFile= - This location can vary based on your Linux distribution!
#     - =Patterns= - Defines which folders will be synced

# For the security conscious:
#     - Decrypt GPG encrypted password file: =gpg --quiet --for-your-eyes-only --no-tty --decrypt ~/.passwords/gmail.gpg=
#     - To use ~Password Store~ password manager program : =pass Mail/MyGmail=

# Start the initial sync: 
# #+begin_src shell :tangle no
# mbsync -a
# #+end_src      

# *NOTE: mbsync won’t create the base maildir for you, you’ll have to create it: mkdir ~/Mail*

# ** Index mailbox
# Once mails have been synced to local Maildir, run a initial indexing process by providing you e-mail address to =mu= program:
# #+begin_src shell :tangle no
# mu init --maildir=~/Mail --my-address=systemcrafters.test@gmail.com
# mu index
# #+end_src

# *NOTE: You will need to use --my-address for every e-mail address you use in a multiple account setup.*

# ** Email Client
# =Mu4e= is an email client for Emacs and it's consider as Emacs interface for =mu= mail indexer. A typical example could be a mail syncing program like ~isync~ which download mail from remote Maildir folder to local Maildir folder and then =mu= indexer will be used to index mail. Then an Emacs mail client can read mails.

# #+begin_src emacs-lisp :results none :tangle no
#   ;; Start - Mail ------------------------------------------------------
#   (use-package mu4e
#     ;; using :ensure nil because we installed mu4e using the distro's
#     ;; package manager to stay compatible with mbsync
#     :ensure nil
#     :defer 20 ; Wait until 20 seconds after startup
#     ;; Path where the package manager is installed mu4e files
#     ;; :load-path "/usr/share/emacs/site-lisp/mu4e/"

#     :config
#     ;; This is set to 't' to avoid mail syncing issues when using mbsync
#     (setq mu4e-change-filenames-when-moving t)

#     ;; Refresh mail using isync every 10 minutes
#     (setq mu4e-update-interval (* 10 60))
#     (setq mu4e-get-mail-command "mbsync -a")
#     (setq mu4e-maildir "~/Mail")

#     ;;  If your Gmail is set up with a different lanugage you also need
#     ;;  to translate the names of these folders. For Norwegian
#     ;;  "[Gmail]/Corbeille" would be "[Gmail]/Papirkurv".
#     (setq mu4e-drafts-folder "/[Gmail]/Brouillons")
#     (setq mu4e-sent-folder   "/[Gmail]/Messages envoy&AOk-s")
#     (setq mu4e-refile-folder "/[Gmail]/Tous les messages")
#     (setq mu4e-trash-folder  "/[Gmail]/Corbeille")

#     (setq mu4e-maildir-shortcuts
#         '(("/Inbox"             . ?i)
#           ("/[Gmail]/Messages envoy&AOk-s" . ?s)
#           ("/[Gmail]/Corbeille"     . ?t)
#           ("/[Gmail]/Brouillons"    . ?d)
#           ("/[Gmail]/Tous les messages"  . ?a)))

#     (setq mu4e-bookmarks
#           '((:name "Unread messages" :query "flag:unread AND NOT flag:trashed AND maildir:/Inbox" :key ?i)
#             (:name "Today's messages" :query "maildir:/Inbox date:today..now" :key ?t)
#             (:name "The Boss" :query "from:stallman" :key ?s)
#             (:name "Last 7 days" :query "date:7d..now" :hide-unread t :key ?w)
#             (:name "Messages with images" :query "mime:image/*" :key ?p)))

#     ;; Start mu4e in the background when Emacs starts and periodically sync mail at the interval defined above
#     (mu4e t)

#     ;; Shortcut to view mails
#     (global-set-key (kbd "C-c m") 'mu4e)
#     )
#   ;; End - Mail --------------------------------------------------------
# #+end_src

# Controlling the number of messages that will get displayed to user by =mu4e= by default:
# - =mu4e-headers-results-limit=: The number of messages to display in mail listings (default 500)
# - =mu4e-headers-full-search=: If =t=, shows all messages, ignoring limit.

# You can toggle =mu4e-headers-full-search= with =M-x mu4e-headers-toggle-full-search=!

# ** Keybinding
# Run =mu4e= to see the landing page or email dashboard =mu4e=. When reading mail, you start out in the ~Headers~ buffer and when you select an email with =RET=, the ~View~ buffer is displayed in a window below the ~Headers~ buffer window.

# Keybinding on ~Headers~ mode/buffer:

# | Key | Evil  | Command                             | Description                          |
# |-----+-------+-------------------------------------+--------------------------------------|
# |     |       | *Movement*                            |                                      |
# | ~C-n~ | ~j~     | =next-line=                           | Moves to the next header line        |
# | ~C-p~ | ~k~     | =previous-line=                       | Moves to the previous header line    |
# | ~[[~  | ~[[~    | =mu4e-headers-prev-unread=            | Moves to previous unread message     |
# | ~]]~  | ~]]~    | =mu4e-headers-next-unread=            | Moves to next unread message         |
# | ~j~   | ~J~     | =mu4e~headers-jump-to-maildir=        | Jump to another mail directory       |
# |     |       |                                     |                                      |
# |     |       | *Toggles*                             |                                      |
# | ~P~   | ~zt~    | =mu4e-headers-toggle-threading=       | Toggles threaded message display     |
# | ~W~   | ~zr~    | =mu4e-headers-toggle-include-related= | Toggles related message display      |
# |     |       |                                     |                                      |
# |     |       | *Marking*                             |                                      |
# | ~d~   | ~d~     | =mu4e-headers-mark-for-trash=         | Marks message for deletion           |
# | ~m~   | ~m~     | =mu4e-headers-mark-for-move=          | Marks message for move to folder     |
# | ~+~   | ~+~     | =mu4e-headers-mark-for-flag=          | Marks message for flagging           |
# | ~-~   | ~-~     | =mu4e-headers-mark-for-unflag=        | Marks message for unflagging         |
# | ~?~   |       | =mu4e-headers-mark-for-unread=        | Marks message as unread              |
# | ~!~   |       | =mu4e-headers-mark-for-read=          | Marks message as read                |
# | ~%~   | ~%~     | =mu4e-headers-mark-pattern=           | Marks based on a regex pattern       |
# | ~u~   | ~u~     | =mu4e-headers-mark-for-unmark=        | Removes mark for message             |
# | ~U~   | ~U~     | =mu4e-mark-unmark-all=                | Unmarks all marks in the view        |
# | ~x~   | ~x~     | =mu4e-mark-execute-all=               | Executes all marks in the view       |
# |     |       |                                     |                                      |
# |     |       | *Searching*                           |                                      |
# | ~s~   | ~s~     | =mu4e-headers-search=                 | Search all e-mails                   |
# | ~S~   | ~S~     | =mu4e-headers-search-edit=            | Edit current search (useful!)        |
# | ~/~   | ~/~     | =mu4e-headers-search-narrow=          | Narrow down the current results      |
# | ~b~   | ~b~     | =mu4e-headers-search-bookmark=        | Select a bookmark to search with     |
# | ~B~   | ~B~     | =mu4e-headers-search-bookmark-edit=   | Edit bookmark before search          |
# | ~g~   | ~gr~    | =mu4e-rerun-search=                   | Rerun the current search             |
# |     |       |                                     |                                      |
# |     |       | *Composing*                           |                                      |
# | ~C~   | ~C~, ~cc~ | =mu4e-compose-new=                    | Compose a new e-mail                 |
# | ~R~   | ~R~, ~cr~ | =mu4e-compose-reply=                  | Compose a reply to selected email    |
# | ~F~   | ~F~, ~cf~ | =mu4e-compose-forward=                | Compose a forward for selected email |
# | ~E~   | ~E~, ~ce~ | =mu4e-compose-edit=                   | Edit selected draft message          |
# |     |       |                                     |                                      |
# |     |       | *Other Actions*                       |                                      |
# | ~q~   | ~q~     | =mu4e~headers-quit-buffer=            | Quit the headers view                |


# Many of the same keybinding in ~Headers~ mode/buffer will work in ~View~ mode/buffer:
# | Key | Evil | Command                  | Description                            |
# |-----+------+--------------------------+----------------------------------------|
# |     |      | *Movement*                 |                                        |
# | ~C-n~ | ~j~    | =next-line=                | Moves to the next line in message      |
# | ~C-p~ | ~k~    | =previous-line=            | Moves to the previous line in message  |
# | ~n~   | ~C-j~  | =mu4e-view-headers-next=   | Moves to next email in header list     |
# | ~p~   | ~C-k~  | =mu4e-view-headers-prev=   | Moves to previous email in header list |
# | ~[[~  | ~[[~   | =mu4e-headers-prev-unread= | Moves to previous unread message       |
# | ~]]~  | ~]]~   | =mu4e-headers-next-unread= | Moves to next unread message           |

# ** References
# - Emacs Mail by [[https://www.youtube.com/playlist?list=PLEoMzSkcN8oM-kA19xOQc8s0gr0PpFGJQ][System Crafters]]
# - [[https://www.reddit.com/r/emacs/comments/8q84dl/tip_how_to_easily_manage_your_emails_with_mu4e/][How to easily manage your emails with mu4e]]
# - [[https://www.reddit.com/r/emacs/comments/bfsck6/mu4e_for_dummies/][mu4e for Dummies]]
