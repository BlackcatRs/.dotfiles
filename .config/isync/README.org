* Isync
Install ~isync~ using your package manager, here we are installing the =apt= package manager, but use whatever package manager you are using:
#+begin_src shell :tangle no 
  sudo apt update && sudo apt install isync
#+end_src

We will use ~isync~ program to download mails to local Maildir folder. We can also use a program called ~offlineimap~ which is a bit slower but it can work on Windows. 

*NOTE: isync is the name of the project, mbsync is the name of the executable.*

** Isync Configuration
Download mails from remote Maildir folder using =.mbsyncrc= configuration file with following settings. 
First at all we configure the remote location of mails from where to download mails.

*** Remote Maildir
Arbitrary name to remote mail server:
#+begin_src org :tangle ./mbsyncrc :padline no
### This file is generated by Emacs's "org-bable-tangle" function

IMAPAccount laposte
#+end_src

Imap server to ownload mails from:
#+begin_src org :tangle ./mbsyncrc :padline no
Host imap.laposte.net 
#+end_src

ID or mail address to connect to IMAP server: 
#+begin_src org :tangle ./mbsyncrc :padline no
User vithurshan@laposte.net
#+end_src

Do not use clear text password =Pass yourPassword=. To store the password in an encrypted file use =PassCmd "gpg -q --for-your-eyes-only --no-tty -d ~/.mailpass.gpg"=. Or use password manager Pass using:
#+begin_src org :tangle ./mbsyncrc :padline no
PassCmd "/usr/bin/pass mail/laposte | head -n 1"
#+end_src

Use SSL with IMAP protocol:
#+begin_src org :tangle ./mbsyncrc :padline no
SSLType IMAPS
#+end_src

The following line should work. If you get certificate errors, uncomment the two following lines and read the "Troubleshooting" section at https://wiki.archlinux.org/title/isync#Troubleshooting:
#+begin_src org :tangle ./mbsyncrc :padline no
CertificateFile /etc/ssl/certs/ca-certificates.crt
#CertificateFile ~/.cert/imap.gmail.com.pem
#CertificateFile ~/.cert/Equifax_Secure_CA.pem
#+end_src

*** Remote Maildir as IMAPStore
Here we assign the remote maildir as IMAPStore:
#+begin_src org :tangle ./mbsyncrc
IMAPStore laposte-remote
Account laposte
#+end_src

*** Local Maildir
Let's now configure local maildir location for storing mails locally by setting  a arbitrary name for the section:
#+begin_src org :tangle ./mbsyncrc
MaildirStore laposte-local
#+end_src

This replicates the hierarchy of subfolders on remote server to local maildir if there are any under the inbox:
#+begin_src org :tangle ./mbsyncrc :padline no
SubFolders Verbatim
#+end_src

The path to store downloaded mail. The trailing "/" is important:
#+begin_src org :tangle ./mbsyncrc :padline no
Path ~/.local/share/mail/vithurshan@laposte.net/
Inbox ~/.local/share/mail/vithurshan@laposte.net/Inbox

#+end_src

*** Mails Sync Config
Associate mailboxes that we created earlier, local and remote, namely =laposte-remote= and =laposte-local:=
#+begin_src org :tangle ./mbsyncrc
Channel laposte
Far :laposte-remote:
Near :laposte-local:
#+end_src

The following configuration tells what and how to sync the local maildir with remote one.

We can exclude everything under [Gmail] folder, except the interesting folders:
#+begin_src :tangle no :padline no
Patterns * ![Gmail]* "[Gmail]/Sent Mail" "[Gmail]/Starred" "[Gmail]/All Mail"
#+end_src

Or include everything:
#+begin_src org :tangle ./mbsyncrc :padline no
Patterns *
#+end_src

Automatically create missing mailboxes, both locally and on the server. For ex: if we create a folder in the remote or local maildir, the next time =mbsync= run it won't create the folder:
#+begin_src org :tangle ./mbsyncrc :padline no
Create Both
#+end_src

Sync the movement of messages between folders and deletions, add after making sure the sync works:
#+begin_src org :tangle ./mbsyncrc :padline no
Expunge Both
#+end_src

Save the synchronization state files in the relevant directory (in local mailbox folder). For example if we move all of downloaded mails another location on the disk and the next time we run mbsync, it will read default sync state file and assume that we delete all mails and make that change to remote repo.
#+begin_src org :tangle ./mbsyncrc :padline no
SyncState *
#+end_src

** Start synchronization
Once we put all the configuration in =mbsyncrc=, we are ready to download the mail to the local maildir:
#+begin_src shell
  mbsync -c ~/.dotfiles/.config/isync/mbsyncrc -a
#+end_src

*** Automatic Sync [Optional]
We can automate the synchronisation of mailboxes using Systemd. Let's first a create a Systemd service file =~/.config/systemd/user/mbsync.service= that launches the sync:
#+begin_src
[Unit]
Description=Mailbox synchronization service

[Service]
Type=oneshot
ExecStart=/usr/bin/mbsync -Va -c /path/to/mbsyncrc -a
Environment="DISPLAY=:0"
# Environment="XAUTHORITY=/path/to/.Xauthority"

[Install]
WantedBy=default.target
#+end_src
*NOTE: Make sure to change the value =/path/to/mbsyncrc= to Isync's configuration file that we created [[Isync Configuration][above]].*

Then creating =~/.config/systemd/user/mbsync.timer= file which configures mbsync to be started 2 minutes after boot, and then every 5 minutes:
#+begin_src
[Unit]
Description=Mailbox synchronization timer

[Timer]
OnBootSec=2m
OnUnitActiveSec=5m
Unit=mbsync.service

[Install]
WantedBy=timers.target  
#+end_src

Once those two files are created, reload systemd, then enable and start =mbsync.timer=:
#+begin_src shell
  systemctl --user daemon-reload && systemctl --user enable --now mbsync.timer
#+end_src
